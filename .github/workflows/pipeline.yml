on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up PostgreSQL
        uses: ikalnytskyi/action-setup-postgres@v4
      
      - name: Set up .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Restore Api Dependencies
        run: dotnet restore Api/Api.csproj

      - name: Build
        run: dotnet build --configuration Release Api/Api.csproj

      - name: Restore MVC Dependencies
        run: dotnet restore ApiWebClient/ApiWebClient.csproj

      - name: Build
        run: dotnet build --configuration Release ApiWebClient/ApiWebClient.csproj

      - name: Restore Test Dependencies
        run: dotnet restore TestProject1/TestProject1.csproj

      - name: Build
        run: dotnet build --configuration Release TestProject1/TestProject1.csproj
      
      - name: Install Compatible EF Core Tools
        run: dotnet tool install --global dotnet-ef --version 7.0.0

      - name: Migration
        run: |
          cd Api
          dotnet ef migrations add initialmigration
          dotnet ef database update

      - name: Publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/result Api/Api.csproj

      - name: Set up ChromeDriver
        uses: nanasess/setup-chromedriver@v1
        with:
          chrome-version: 'latest'
          chromedriver-version: 'latest'


      - name: Run Apps
        run: |
          cd Api
          cmd /c "start dotnet run --urls=http://localhost:5071"
          cd ../ApiWebClient
          cmd /c "start dotnet run --urls=http://localhost:5117"
          cd ../TestProject1
          dotnet test
          exit 1

      - name: Ticket
        if: failure()
        run: |
          echo '[{
            "op": "add",
            "path": "/fields/System.Title",
            "from": null,
            "value": "Tests failed"
          }]' > bug.json
          echo "Azure DevOps Token: $AZURE_DEVOPS_TOKEN"
          echo "API URL: https://dev.azure.com/01169583/Zaj_1/_apis/wit/workitems/\$Issue?api-version=7.1-preview.3"
          curl -g -X POST -H "Content-Type: application/json-patch+json" -H "Authorization: Basic ${{ secrets.AZURE_CREDENTIALS }}" --data "@ticket.json" "https://dev.azure.com/01169583/Zaj_1/_apis/wit/workitems/%24Issue?api-version=7.1-preview.3" -o response.json
          cat response.json
        env:
          AZURE_DEVOPS_TOKEN: ${{ secrets.AZURE_CREDENTIALS }}
